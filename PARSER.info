**********************	QUE HAY QUE HACERLE	***********************


**********************	ESTRUCTURA GENERAL	************************
Vamos a tomar al parser como una estructura con un lexer que nos va a servir 
para desfragmentar la cadena de texto (string proveniente del stdin) y 
convertirlo en un pipeline.

Dentro de la estructura tenemos 2 indicadores. Uno que nos dice en el estado
de la proxima cadena de caracteres que vamos a leer, y otro el estado de error
si es que se encontro alguno.

	Funcionamiento:
			parse_pipeline es la funcion mas importante. La cual 
puede devolver NULL (en caso de error) o un pipe en caso contrario.
 Para obtener el error hay que llamar a parser_get_error. La cual devuelve una
de las posibilidades del enum parser_error.
 


******************	TENER EN CUENTA		***********************
	* Fijarse el tema de cuando devuelve el pipeline, que no se puede llegar
a los scommand, por lo que se genera leaks, hay que recorrer todo el pipe e ir
borrando todo.
	* En caso de error, externamente debe ser visto que tipo de error se
produjo. Ya que no muestra nada en pantalla y devuelve NULL (la funcion
parse_pipeline).


